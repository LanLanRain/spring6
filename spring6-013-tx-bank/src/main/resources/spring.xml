<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--组件扫描-->
    <context:component-scan base-package="com.rainsoul"/>

    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/t_act"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!--配置JdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务管理器 -->
    <!-- 这一部分定义了一个bean，id为"txManager"，其类型为org.springframework.jdbc.datasource.DataSourceTransactionManager。
         这个事务管理器将用于管理应用程序中的事务。它通过引用名为"dataSource"的bean来获取数据源，从而能够管理与数据源相关的事务。 -->

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启事务注解驱动器，开启事务注解 -->
    <!-- 这个标签告诉Spring框架，采用注解的方式去控制事务。通过指定transaction-manager属性为"txManager"，
         它与上面定义的事务管理器bean关联起来，使得Spring能够根据注解来管理事务，简化了事务的配置工作。 -->
    <tx:annotation-driven transaction-manager="txManager"/>

</beans>













